/*
 - 그래프 내에 모든 정점을 포함하는 최소 연결 부분 그래프
 - 최소신장트리 조건 (MST)
   - 최소의 간선으로 모든 정점 연결
   - 가중치 최소
   - 사이클 X


- 크루스칼 알고리즘
 - 그리디 개념
 - 먼저 모든 그래프를 부분집합으로 분리
 - 가장 가중치가 낮은 간선을 선택하고, 부분집합 연결 
   * 이 때, 사이클이 발생하지 않도록 주의
   * 사이클 판단 알고리즘으로 Union-Find 알고리즘 이용
   
 
- union-find 알고리즘
 - 서로소 집합을 구하기 위한 알고리즘
   * 서로소 집합은 공통원솨가 없는 두 집합을 표현하기 위한 자료구조
 - union: 서로 다른 두 집합을 병합하는 연산
 - find: 집합 원소가 어떤 집합에 속해있는지 판단하는 연산 
 - 트리구조로 구성
 - 편의상 재귀구현
*/

/*
union 연산 
 - 초기에는 자기 자신을 부모 정점으로 설정 (자기 자신 = 자신이 속한 집합)
   * key : 원소, value: 자신이 속한 집합의 부모 정점

 - b가 a에 속할 경우, b의 부모원소를 a로 바꿔줌. 둘은 같은집합이 됨
 - d가 a에 속할 경우, d의 부모원소를 a로 바꿔줌
 - e에 c에 속하면, e의 부모원소를 c로 바꿔줌

find연산 
 - parent가 자기자신일때까지 올라가는 방법을 사용 (재귀사용)
 - 내가 어느집합에 속한는지 판단함
*/

/* kruskal
 - 가장 중요한 것은 집합으로 연결하려 할 때, value값이 같은 부모원소를 가리키는지 확인하는것
   
    1. 가장 가중치가 낮은 간선 선택, 두 정점을 한 집합으로 이어줌
    2. 다음으로 가중치가 낮은 간선 선택, 두 정점을 한 집합으로 이어줌
    3. ...
    4. 만약 한 집합으로 이으려 할때 사이클이 발생하는지 확인을 잘해야한다.
    - 집합배열 안에서, 만약 정점을 이으려하는 원소가 a-c일때, a와c가 같은 최고 parent값을 가지면 사이클

    5. 연결하지 않은 pass한 간선을 제외하면 최소신장트리가 완성된다.

  정리)
   - 가장 가중치가 낮은 간선 선택
   - 각 원소가 같은 집합인지 확인하기위한 알고리즘 : union-find
   - 두 정점이 같은 집합에 속한다면 - cycle
*/