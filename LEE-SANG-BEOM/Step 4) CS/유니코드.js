/*

문자가 브라우저에 그려지는 프로세스
 - 값으로 이루어진 문자와 글꼴이 만나, 렌더링 엔진을 통해 그려짐

기본개념)
 1. CCS
 - 문자들을 Code point에 대응시켜 만든 코드화된 문자들의 집합
 - code point는 정의해놓은 정수값으로, 각 문자들의 식별자가 된다.
 - 한글: ks c 5601, 국제표준: iso 10646


 2. CES
 - CCS를 8비트(문자를 표현하는 기본단위) 집합에 대응시킨 것
 - CCS와 CES는 1:1로 대응된다
 - 흔히 말하는 인코딩에 해당한다.
 - 인코딩: character로 시스템이 인식할 수 있는 값으로 변환하는 것
 - 디코딩: 인코딩된 값을 다시 character로 변환하는 것
 - UTF-8, euc-kr, ...

 3. TES
 - 인코딩된 문자가 특정 프로토콜을 타고 전송되도록 변환하는 것
 - 통신 프로토콜에 제약은 있을 수 있기에 사용


 4. 세 가지 개념의 끝판왕 : 유니코드
 - 유니코드는 전세계 문자를 컴퓨터에서 다룰 수 있도록 한 표준시스템이다.
 - 하지만 다양한 나라가 서로 다른 인코딩 방식(CES)을 사용함으로써 호환성/확장성에 문제가 발생하였다.
 - 결국, 전세계 문자를 컴퓨터에서 다룰 수 있도록 만든 [표준] 시스템을 만들었다.
 - 이모티콘도 포함되어 있다.

 - 유니코드는 여러 방식으로 인코딩(CES)될 수 있다. (대표적으로 UTF계열)
   * UTF-N에서, N은 어떤 단위로 조합되어 인코딩되는지를 나타내며, 크기를 줄이기 위해 8을 사용한다.
   * Big-endian: 큰쪽에서 작은쪽으로 저장 (높은비트위치부터 메모리에 순차저장: 사람이읽고쓰는법과 비슷해 가독성좋음)
   * Little-endian: 작은쪽에서 큰쪽으로 저장 (낮은비트위치부터 메모리에 순차저장: 컴퓨터가 사용하기에 편함)

 5. JS는 브라우저를 따라 자연스레 유니코드를 지원한다.
  - 이모지는 문자길이를 2차지한다.(이모지는 4바이트로 구성)
  - 유니코드에서 영어든 한글이든 2바이트로 읽힌다. 따라서, 한글은 한글자당 길이 1을 차지한다.

*/