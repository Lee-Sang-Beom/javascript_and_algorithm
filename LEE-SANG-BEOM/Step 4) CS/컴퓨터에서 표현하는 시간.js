/*
- 컴퓨터 시간?

1. 시간의 결정: 꽤 많은 조건을 고려해서 시간을 표시함
 - (1) 물리량: 시간은 물리학 관점에서 봤을 대, 시각과 시각 사이 간격을 표현하는 단위를 뜻함
 - (2) 위치: 시간은 위치에 따라 다르게 표현될 수 있다.
 - (3) 천문 현상: 지구 자전속도 불규칙성, 지구 자전/공전주기 등 천문 현상으로 위한 시간 보정이 피룡
 - (4) 문화: 문화에 따른 시간표현이 다를 수 있음
 - (5) 역사: 역사적 사건에 의해 시간은 다르게 표현될 수 있다.
 - (6) 사회: 사회적 제도에 의해 시간은 변할 수 있다.


2. UTC(협정 세계시): 대부분 국가가 이것을 기준으로 시간을 관리
 - 원자 시계와 윤초 보정을 기반으로 표준화한 시각
 - 모든 시간대는 UTC+0을 기준으로 환산
 - 한국은 UTC+9 (영국(UTC+0)이 오전 1시면, 대한민국은 오전 10시)

3. 컴퓨터가 시간을 표현하는 방법
 - 하드웨어의 시스템 클럭을 이용
    > 시스템 클럭: RTC라는 모듈 사용: 메인보드에 붙어있어 전원이 꺼져도 계속 작동
    > RTC는 Real Time Clock이라는 모듈이고, 카운터 회로를 통해 클럭을 발생시킴

 - 특정 시각을 기준으로, 시스템 클럭의 틱을 세는 것으로 구현
 - 이를 시스템 시간이라 부름
 - 시스템 시간을 값으로 표현한 것이 타임스탬프

4. 현재시간 알아내는 방법
 - 시스템 시간을 NTP를 통해 동기화 (시스템시간: 특정시간 기준으로, 시스템클럭 틱을 셈. 특정시간을 NTP로 불러옴)
 - NTP(Network Time Protocol) 서버에 네트워크 요청을 해 현재 시간을 받아오는 것임

5. 시간대 고려
 - 국가, 지역별로 시간이 다름
 - 이 문제를 해결하기 위해, 시간 데이터를 데이터베이스에 저장.
 - 이 데이터베이스의 데이터가 Time Zone 데이터

6. 시간을 어떤 기준으로 사용해야 할까? (글로벌 서비스를 운영할 때 시간이 매우 중요)
 - UTC: 사건이 발생한 시각만을 고려하고 나열할 때 사용 (주식, 감사, 시계열 데이터)
 - Time Zone: 역사, 사회, 문화를 고려해 사용자가 이용한 시각을 정확히 알아야 할 때
   * UI에 표시되는 시간을 사용자 기준으로 보여줄 때 사용: 결제시각, 푸시 알림시간, UI시각, 캘린더

7. 자바스크립트에서
 - Date()객체
*/