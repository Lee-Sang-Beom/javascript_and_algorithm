const Index = () => {
  return (
    <>
      <p>test</p>
    </>
  );
};

export default Index;

/*
[정렬]
1. 요소들을 일정한 순서대로 열거하는 알고리즘

[특징]
1. 정렬 기준은 사용자가 정할 수 있음.
2. 종류: 비교식 / 분산식
3. 빌트인으로 정렬 라이브러리 제공.
4. 다양한 방식: 삽입, 선택, 버블, 합병, 힙, 퀵

// https://www.toptal.com/developers/sorting-algorithms

[비교식 정렬]

1. [버블 정렬] O(n^2)
: 서로 인접한 두 요소를 검사하여 정렬.


2. [선택 정렬] O(n^2)
: 선택한 요소와 가장 우선순위가 높은 요소를 교환하는 정렬 알고리즘

3. [삽입 정렬] O(n^2)
: 선택한 요소를 삽입 할 수 있는 위치를 찾아 삽입

[분산식 정렬]

<분할 정복>
: 문제를 작은 2개의 문제로 분리, 
 이상 분리가 불가능할 때 처리한 후 합치는 전략.
 (다양한 알고리즘에 응용됨)

1. [합병 정렬] O(nlogn) (분할 정복 이용)
: 최선, 최악이 같은 안정적인 정렬 알고리즘

2. [퀵 정렬] O(nlogn)
: 매우 빠름 ( 불안정 정렬 - 최악의 경우가 존재)
피봇 선정하여 정렬.

*/

// 일반적인 sort 정렬을 진행 할 경우 ASCII 순으로 정렬 함 (2보다 10이 먼저 옴)

const array = [5,9,10,3,8,3,2];

// 오름차순 정렬
array.sort((a,b) => a-b);
console.log(array);

// 내림차순 정렬
array.sort((a,b) =>  b -a);
console.log(array);

