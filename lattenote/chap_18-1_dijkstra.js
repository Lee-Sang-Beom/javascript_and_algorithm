const Index = () => {
  return (
    <>
      <p>test</p>
    </>
  );
};

export default Index;

/*
[최단 경로 알고리즘]
1. 그래프에서 특정 정점에서 목적지까지 최단 경로를 구하는 알고리즘
2. BFS, DFS 또한 최단 경로 알고리즘으로 사용 가능.
3. 대표 최단 경로 알고리즘
    - BFS
    - 다익스트라 (이번에 다룰 주제)
    - 벨만-포드 (Bellman-Ford's)
    - 플로이드 와샬 (Floyd Warshall)
4. 목적에 따라 알고리즘 선택 가능.

[BFS, DFS]
1. 그래프의 간선 가중치가 모두 같을 때 적합.
예) 2차원 배열(지도) => 최단 거리 찾기.
=> 간선의 가중치는 모두 1.

[다익스트라]
1. 간선에 가중치가 각각 다른 경우

[다익스트라 알고리즘]
1. 우선순위 큐를 이용하여. (핵심)
2. 시간복잡도 : O(E log V)
    정점의 수 : V
    간선의 수 : E 

[알고리즘 설명]
1. 시작점을 제외한 모든 정점의 거리를 무한으로 설정. (시작점은 0)
2. 시작점 선택.
3. 선택한 정점에서 갈 수 있는 정점의 거리 갱신
    =>
    정점(해당 정점까지의 최단거리) 값 + 간선(거리) 값으로 갱신.
4. 선택한 정점을 방문 처리.
5. 이미 방문한 정점과 무한인 정점을 제외하고 가장 최단 거리인 정점 선택
6. 더 이상 방문할 수 있는 정점 없을 때까지 과정 3~5를 반복
7. 도착점의 값 확인.

*/
