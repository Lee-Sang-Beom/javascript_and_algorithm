const Index = () => {
  return (
    <>
      <p>test</p>
    </>
  );
};

export default Index;

/*
[백트래킹]
1. 백트래킹: 모든 경우의 수를 탐색하는 알고리즘
2. DFS나 BFS를 이용할 수 있다.
3. 가지치기(Pruning)
: 효율을 위해 탐색하지 않아도 되는 곳을 미리 막는 것.

Tip.
1. 자바스크립트에선 재귀 효율 나쁨
=> DFS 구현 시 스택 이용하는 것이 좋음
=> 코테에선 재귀로 작성해도 풀 수 있도록 문제 제출함.
3. 탐색에서 순환(Cycle)이 발생할 수 있다면 BFS 이용하는 것이 편함.


[BFS,DFS] (꼭 외워두기.)
=> 모든 경우의 수 찾을 때도 사용.

[핵심]
가지치기. (얼마나 잘하느냐에 따라 효율성 결정)

[작성 요령]
1. 모든 경우의 수를 찾을 수 있도록 코딩.
2. 이후 문제에서 특정 조건 만족하는 것만 탐색하도록,
나머지는 탐색하지 않도록 조건문을 작성.
3. 절대로 답이 될 수 없는 것은 탐색 종료.

[N-Queen]
: 길이가 N인 체스판 위에 N개의 퀸이 
서로를 공격할 수 없도록 배치할 수 있는 경우의 수?

백트래킹 이용

  */
